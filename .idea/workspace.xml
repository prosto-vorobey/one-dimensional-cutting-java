<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="15af58e7-45c1-4c5e-984b-abdd5b8ac6a7" name="Changes" comment="feat: add toString implementations and final modifiers to multiple classes&#10;&#10;- Added explicit toString() implementations to improve debugging and logging in tests&#10;- Made immutable classes final to prevent inheritance where not intended">
      <change afterPath="$PROJECT_DIR$/test/BestPlanSearchersDeviationScaleTest.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/BestPlanSearchersTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/test/BestPlanSearchersWorkTest.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 0
}</component>
  <component name="ProjectId" id="31h9nBzAOxR1SWlV6ev84x9MYbX" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Application.OneDimensionalCutting.executor": "Debug",
    "Downloaded.Files.Path.Enabled": "true",
    "JUnit.All in one-dimensional-cutting.executor": "Run",
    "JUnit.BestPlanSearchersDeviationScale.bestPlanSearcher_shouldHavePossibleDeviation.executor": "Run",
    "JUnit.BestPlanSearchersDeviationScale.executor": "Run",
    "JUnit.BestPlanSearchersDeviationScaleTest.executor": "Run",
    "JUnit.BestPlanSearchersTest.bestPlanSearcher_shouldBeWithinPossibleDeviation.executor": "Run",
    "JUnit.BestPlanSearchersTest.bestPlanSearcher_shouldNotLessOptimalRodsAmount.executor": "Run",
    "JUnit.BestPlanSearchersTest.executor": "Run",
    "JUnit.BestPlanSearchersTest.test.executor": "Run",
    "JUnit.BestPlanSearchersWorkTest.executor": "Run",
    "JUnit.MyTest.executor": "Run",
    "JUnit.MyTest.shouldReadAsyncAllFilesFromResources.executor": "Debug",
    "JUnit.MyTest.test.executor": "Debug",
    "JUnit.TaskDataReaderTest.executor": "Debug",
    "JUnit.TaskDataReaderTest.readAsync_shouldReturnCorrectNumberOfTaskData.executor": "Run",
    "ModuleVcsDetector.initialDetectionPerformed": "true",
    "Repository.Attach.Annotations": "false",
    "Repository.Attach.JavaDocs": "false",
    "Repository.Attach.Sources": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "git-widget-placeholder": "main",
    "last_directory_selection": "D:/Медиа/Работа/Поиск работы/one-dimensional-cutting/test",
    "last_opened_file_path": "D:/Медиа/Работа/Поиск работы/one-dimensional-cutting",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "Project",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.2",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="bestPlanSearcher" />
      <recent name="bestPlanSearcher.permutationGenerator" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\Медиа\Работа\Поиск работы\one-dimensional-cutting\src\resources" />
      <recent name="D:\Медиа\Работа\Поиск работы\one-dimensional-cutting\src" />
    </key>
    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
      <recent name="" />
    </key>
  </component>
  <component name="RunManager" selected="JUnit.BestPlanSearchersDeviationScaleTest">
    <configuration name="BestPlanSearchersDeviationScaleTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="one-dimensional-cutting" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="BestPlanSearchersDeviationScaleTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="BestPlanSearchersDeviationScaleTest.bestPlanSearcher_shouldHavePossibleDeviation" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="one-dimensional-cutting" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="BestPlanSearchersDeviationScaleTest" />
      <option name="METHOD_NAME" value="bestPlanSearcher_shouldHavePossibleDeviation(java.lang.String,org.junit.jupiter.api.TestReporter)" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="BestPlanSearchersWorkTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="one-dimensional-cutting" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="BestPlanSearchersWorkTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="BestPlanSearchersWorkTest.bestPlanSearcher_shouldBeWithinPossibleDeviation" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="one-dimensional-cutting" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="BestPlanSearchersWorkTest" />
      <option name="METHOD_NAME" value="bestPlanSearcher_shouldBeWithinPossibleDeviation(bestPlanSearcher.BestPlanSearcher)" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="BestPlanSearchersWorkTest.bestPlanSearcher_shouldNotLessOptimalRodsAmount" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="one-dimensional-cutting" />
      <option name="PACKAGE_NAME" value="" />
      <option name="MAIN_CLASS_NAME" value="BestPlanSearchersWorkTest" />
      <option name="METHOD_NAME" value="bestPlanSearcher_shouldNotLessOptimalRodsAmount(bestPlanSearcher.BestPlanSearcher,int,org.junit.jupiter.api.TestReporter)" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.BestPlanSearchersDeviationScaleTest" />
        <item itemvalue="JUnit.BestPlanSearchersDeviationScaleTest.bestPlanSearcher_shouldHavePossibleDeviation" />
        <item itemvalue="JUnit.BestPlanSearchersWorkTest" />
        <item itemvalue="JUnit.BestPlanSearchersWorkTest.bestPlanSearcher_shouldBeWithinPossibleDeviation" />
        <item itemvalue="JUnit.BestPlanSearchersWorkTest.bestPlanSearcher_shouldNotLessOptimalRodsAmount" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-fbdcb00ec9e3-intellij.indexing.shared.core-IU-251.27812.49" />
        <option value="bundled-js-predefined-d6986cc7102b-09060db00ec0-JavaScript-IU-251.27812.49" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="15af58e7-45c1-4c5e-984b-abdd5b8ac6a7" name="Changes" comment="" />
      <created>1755965602507</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1755965602507</updated>
      <workItem from="1755965604410" duration="97039000" />
    </task>
    <task id="LOCAL-00001" summary="fix: rebuild project configuration">
      <option name="closed" value="true" />
      <created>1755966596373</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1755966596373</updated>
    </task>
    <task id="LOCAL-00002" summary="feat: add permutation generators&#10;&#10;Added PermutationGenerator interface and its implementations:&#10;- DescendingPermutationGenerator for descending order by length&#10;- BreakRandomPermutationGenerator for mixed ordered/random permutations starting from some position">
      <option name="closed" value="true" />
      <created>1755966876344</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1755966876344</updated>
    </task>
    <task id="LOCAL-00003" summary="feat: add implements for PermutationSetGenerator&#10;&#10;Added:&#10;- RandomPermutationSetGenerator for create set of permutation with random order&#10;- BreakRandomPermutationSetGenerator for create set of permutation by BreakRandomPermutationGenerator with different break scale">
      <option name="closed" value="true" />
      <created>1756030417240</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1756030417240</updated>
    </task>
    <task id="LOCAL-00004" summary="feat: add TaskDataReader with async reading of TaskData from files">
      <option name="closed" value="true" />
      <created>1756055608478</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1756055608478</updated>
    </task>
    <task id="LOCAL-00005" summary="feat: change readAsync return type to CompletableFuture">
      <option name="closed" value="true" />
      <created>1756118745330</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1756118745330</updated>
    </task>
    <task id="LOCAL-00006" summary="refactor(planner): rename planFor to generatePlan">
      <option name="closed" value="true" />
      <created>1756119906092</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1756119906092</updated>
    </task>
    <task id="LOCAL-00007" summary="refactor(bestPlanSearcher): rewrite searchBest using streams">
      <option name="closed" value="true" />
      <created>1756119925610</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1756119925610</updated>
    </task>
    <task id="LOCAL-00008" summary="refactor(task): shorten constructor">
      <option name="closed" value="true" />
      <created>1756119937276</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1756119937276</updated>
    </task>
    <task id="LOCAL-00009" summary="refactor(task): replace split content by spaces with split by any separating characters in parseContent in TaskDataReader">
      <option name="closed" value="true" />
      <created>1756130450007</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1756130450007</updated>
    </task>
    <task id="LOCAL-00010" summary="test: add test infrastructure and TaskDataReader test&#10;&#10;- Marked 'test' directory as test resources root&#10;- Added test data files in test/resources&#10;- Created TestDataHelper utility class with file find methods&#10;- Implemented TaskDataReaderTest verifying correct file-to-TaskData mapping">
      <option name="closed" value="true" />
      <created>1756227513843</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1756227513843</updated>
    </task>
    <task id="LOCAL-00011" summary="fix: correct remainingLength calculation in RodPlan initialization&#10;&#10;Previously, when initializing RodPlan with a Blank parameter, the remainingLength field did not account for the blank's length. The issue has been fixed.">
      <option name="closed" value="true" />
      <created>1756244977356</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1756244977356</updated>
    </task>
    <task id="LOCAL-00012" summary="fix: correct creating new permutations in getPermutationSet in BestRandomPermutationSetGenerator&#10;&#10;Previously, when permutations from 0 to stepCount - 1 were created, there was a chance that permutation with counter = stepCount - 2 would equal with set and with counter = stepCount - 1 the cycle would go to infinity.&#10;&#10;The issue has been fixed by passing from stepCount - 1 to 0.">
      <option name="closed" value="true" />
      <created>1756284190210</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1756284190210</updated>
    </task>
    <task id="LOCAL-00013" summary="feat(bestPlanSearcher): implemented basic searcher for best solution and rename searchBest to findBest&#10;&#10;Renamed">
      <option name="closed" value="true" />
      <created>1756284593212</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1756284593212</updated>
    </task>
    <task id="LOCAL-00014" summary="refactor(bestPlanSearcher): rename searchBest to findBest">
      <option name="closed" value="true" />
      <created>1756286607849</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1756286607849</updated>
    </task>
    <task id="LOCAL-00015" summary="feat(bestPlanSearcher): implemented basic searcher and factory of searchers for best solution&#10;&#10;- Added BasePlanSearcher class implementing the BestPlanSearcher interface. Provides basic functionality for plan searching using planner and permutation generator.&#10;&#10;- Added BestPlanSearcherFactory class for creating different searcher variants with factory methods:&#10;    - createBaseSearcher: create BasePlanSearcher with different PermutationGenerator&#10;    - createIterativeSearcher: create IterativePlanSearcher with different PermutationSetGenerator">
      <option name="closed" value="true" />
      <created>1756287239731</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1756287239731</updated>
    </task>
    <task id="LOCAL-00016" summary="test: add tests to check correct work of best plan searchers and added shutdown for executors&#10;&#10;Added BestPlanSearchersTest with test methods:&#10;- greedyWithDescendingPermutation_shouldReturnExpectedRodsAmount: generate best plan using a greedy algorithm with permutation to descending length of blank and equals rod amount of best plan with reference value for each TaskData&#10;- bestPlanSearcher_shouldNotLessOptimalRodsAmount: generate best plan using searcher and checks that rod amount of best plan doesn't exceed optimal value for each TaskData">
      <option name="closed" value="true" />
      <created>1756290963905</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1756290963905</updated>
    </task>
    <task id="LOCAL-00017" summary="fix: correct processing of large number of steps in set permutation generators&#10;&#10;Previously, when checking for max count of permutation, factorial was calculated for any set size. When calculating big factorials, type overflow happened and return value was 0. This caused errors.&#10;&#10;The issue has been fixed by limiting factorial value to max value of Integer.">
      <option name="closed" value="true" />
      <created>1756290980299</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1756290980299</updated>
    </task>
    <task id="LOCAL-00018" summary="feat: add toString implementations and final modifiers to multiple classes&#10;&#10;- Added explicit toString() implementations to improve debugging and logging in tests&#10;- Made immutable classes final to prevent inheritance where not intended">
      <option name="closed" value="true" />
      <created>1756293354647</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1756293354647</updated>
    </task>
    <option name="localTasksCounter" value="19" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="fix: rebuild project configuration" />
    <MESSAGE value="feat: add permutation generators&#10;&#10;Added PermutationGenerator interface and its implementations:&#10;- DescendingPermutationGenerator for descending order by length&#10;- BreakRandomPermutationGenerator for mixed ordered/random permutations starting from some position" />
    <MESSAGE value="feat: add implements for PermutationSetGenerator&#10;&#10;Added:&#10;- RandomPermutationSetGenerator for create set of permutation with random order&#10;- BreakRandomPermutationSetGenerator for create set of permutation by BreakRandomPermutationGenerator with different break scale" />
    <MESSAGE value="feat: add TaskDataReader with async reading of TaskData from files" />
    <MESSAGE value="feat: change readAsync return type to CompletableFuture" />
    <MESSAGE value="refactor(planner): rename planFor to generatePlan" />
    <MESSAGE value="refactor(bestPlanSearcher): rewrite searchBest in IterativePlanSearcher using streams" />
    <MESSAGE value="refactor(task): shorten constructor" />
    <MESSAGE value="refactor(task): replace split content by spaces with split by any separating characters in parseContent in TaskDataReader" />
    <MESSAGE value="refactor(bestPlanSearcher): rewrite searchBest in IterativePlanSearcher using streams" />
    <MESSAGE value="test: add test infrastructure and TaskDataReader test&#10;&#10;- Marked 'test' directory as test resources root&#10;- Added test data files in test/resources&#10;- Created TestDataHelper utility class with file find methods&#10;- Implemented TaskDataReaderTest verifying correct file-to-TaskData mapping" />
    <MESSAGE value="fix: correct remainingLength calculation in RodPlan initialization&#10;&#10;Previously, when initializing RodPlan with a Blank parameter, the remainingLength field did not account for the blank's length. The issue has been fixed." />
    <MESSAGE value="fix: correct creating new permutations in getPermutationSet in BestRandomPermutationSetGenerator&#10;&#10;Previously, when permutations from 0 to stepCount - 1 were created, there was a chance that permutation with counter = stepCount - 2 would equal with set and with counter = stepCount - 1 the cycle would go to infinity.&#10;&#10;The issue has been fixed by passing from stepCount - 1 to 0." />
    <MESSAGE value="feat(bestPlanSearcher): implemented basic searcher for best solution and rename searchBest to findBest&#10;&#10;Renamed" />
    <MESSAGE value="feat(bestPlanSearcher): implemented basic searcher for best solution and rename searchBest to findBest&#10;&#10;Renamed searchBest to improve readability" />
    <MESSAGE value="refactor(bestPlanSearcher): rename searchBest to findBest" />
    <MESSAGE value="feat(bestPlanSearcher): implemented basic searcher and factory of searchers for best solution&#10;&#10;- Added BasePlanSearcher class implementing the BestPlanSearcher interface. Provides basic functionality for plan searching using planner and permutation generator.&#10;&#10;- Added BestPlanSearcherFactory class for creating different searcher variants with factory methods:&#10;    - createBaseSearcher: create BasePlanSearcher with different PermutationGenerator&#10;    - createIterativeSearcher: create IterativePlanSearcher with different PermutationSetGenerator" />
    <MESSAGE value="test: add tests to check correct work of best plan searchers and added shutdown for executors&#10;&#10;Added BestPlanSearchersTest with test methods:&#10;- greedyWithDescendingPermutation_shouldReturnExpectedRodsAmount: generate best plan using a greedy algorithm with permutation to descending length of blank and equals rod amount of best plan with reference value for each TaskData&#10;- bestPlanSearcher_shouldNotLessOptimalRodsAmount: generate best plan using searcher and checks that rod amount of best plan doesn't exceed optimal value for each TaskData" />
    <MESSAGE value="fix: correct processing of large number of steps in set permutation generators&#10;&#10;Previously, when checking for max count of permutation, factorial was calculated for any set size. When calculating big factorials, type overflow happened and return value was 0. This caused errors.&#10;&#10;The issue has been fixed by limiting factorial value to max value of Integer." />
    <MESSAGE value="feat: add toString implementations and final modifiers to multiple classes&#10;&#10;- Added explicit toString() implementations to improve debugging and logging in tests&#10;- Made immutable classes final to prevent inheritance where not intended" />
    <option name="LAST_COMMIT_MESSAGE" value="feat: add toString implementations and final modifiers to multiple classes&#10;&#10;- Added explicit toString() implementations to improve debugging and logging in tests&#10;- Made immutable classes final to prevent inheritance where not intended" />
  </component>
  <component name="XDebuggerManager">
    <pin-to-top-manager>
      <pinned-members>
        <PinnedItemInfo parentTag="bestPlanSearcher.IterativePlanSearcher" memberName="permutationSetGenerator" />
      </pinned-members>
    </pin-to-top-manager>
    <watches-manager>
      <configuration name="JUnit">
        <watch expression="optimalResult" />
      </configuration>
    </watches-manager>
  </component>
</project>